var JSConnector=(()=>{var p=Object.create;var s=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var v=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var m=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),O=(e,t)=>{for(var n in t)s(e,n,{get:t[n],enumerable:!0})},u=(e,t,n,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of C(t))!g.call(e,r)&&r!==n&&s(e,r,{get:()=>t[r],enumerable:!(o=y(t,r))||o.enumerable});return e};var _=(e,t,n)=>(n=e!=null?p(v(e)):{},u(t||!e||!e.__esModule?s(n,"default",{value:e,enumerable:!0}):n,e)),z=e=>u(s({},"__esModule",{value:!0}),e);var w=m((P,f)=>{"use strict";f.exports=function(){throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object")}});var B={};O(B,{EventWebSocket:()=>i,default:()=>k});var a=e=>(e.getInt32(4,!0)&16777216)>0,x=e=>e.getInt32(4,!0)&16777215,d=e=>e.getInt32(0,!0),E=(e,t)=>a(t)?e.subarray(8,16):null,I=e=>e.authCode?16:8,M=e=>e.authCode==null?e.code:e.code|16777216,R=e=>e.size+I(e),h=e=>typeof e=="string"?new TextEncoder().encode(e):new Uint8Array(e),S=e=>e.authCode?h(e.authCode):null,A=(e,t)=>{let n=0;return a(t)&&(n=8),e.subarray(8+n,8+n+d(t))};function l(e){if(e.length<8)return null;let t=new DataView(e.buffer,e.byteOffset,e.byteLength);return{size:d(t),code:x(t),authCode:E(e,t),payload:A(e,t)}}var U=e=>e.size!=null&&e.code!=null&&e.authCode!=null&&e.payload!=null;function c(e){if(!U(e))return null;let t=new Uint8Array(R(e)),n=new DataView(t.buffer),o=0;n.setInt32(0,e.size,!0),n.setInt32(4,M(e),!0);let r=null;if(e.authCode&&(r=S(e))){if(!r)return null;t.set(r,8),o+=8}return t.set(h(e.payload),8+o),t}var i=class{constructor(t){this.host=t,this.onOpen=null,this.onReceive=null,this.onClose=null,this.onError=null}_onOpen(t){t.onOpen&&t.onOpen()}_onReceive(t,n){t.onReceive&&t.onReceive(l(new Uint8Array(n)))}_setMethods(){let t=this;this.ws.on("open",()=>this._onOpen(t)),this.ws.on("message",n=>this._onReceive(t,n)),this.ws.on("error",n=>this._onError(n))}_onError(t){this.onError&&this.onError(t)}send(t){let n=c(t);n&&this.ws.send(n)}async connect(){let t;typeof window<"u"?t=WebSocket:t=(await Promise.resolve().then(()=>_(w(),1))).default;try{this.ws=new t(this.host),this._setMethods()}catch{return!1}return!0}},k=i;return z(B);})();
